2025-03-26 19:00:10,013 - INFO - 检测到当前路径已有模型，直接载入
2025-03-26 19:00:10,014 - ERROR - An error occurred: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
2025-03-26 19:00:10,015 - ERROR - Traceback: Traceback (most recent call last):
  File "C:\Users\ZhangYi\Desktop\Foshan-AI\test_mainv1.py", line 331, in main
    predict_model = Init_predict_model(model_args[model_name],database=input_database, input_uid_list=input_predict_uid_list, output_uid_list=output_predict_uid_list, all_uid_list=all_uid_list, model_path=model_path,device=device)
  File "C:\Users\ZhangYi\Desktop\Foshan-AI\test_mainv1.py", line 109, in Init_predict_model
    model = torch.load(model_path)
  File "D:\Software\Anaconda\envs\Foshan-AI\lib\site-packages\torch\serialization.py", line 1025, in load
    return _load(opened_zipfile,
  File "D:\Software\Anaconda\envs\Foshan-AI\lib\site-packages\torch\serialization.py", line 1446, in _load
    result = unpickler.load()
  File "D:\Software\Anaconda\envs\Foshan-AI\lib\site-packages\torch\serialization.py", line 1416, in persistent_load
    typed_storage = load_tensor(dtype, nbytes, key, _maybe_decode_ascii(location))
  File "D:\Software\Anaconda\envs\Foshan-AI\lib\site-packages\torch\serialization.py", line 1390, in load_tensor
    wrap_storage=restore_location(storage, location),
  File "D:\Software\Anaconda\envs\Foshan-AI\lib\site-packages\torch\serialization.py", line 390, in default_restore_location
    result = fn(storage, location)
  File "D:\Software\Anaconda\envs\Foshan-AI\lib\site-packages\torch\serialization.py", line 265, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "D:\Software\Anaconda\envs\Foshan-AI\lib\site-packages\torch\serialization.py", line 249, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.

